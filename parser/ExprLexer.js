// Generated from parser/Expr.g4 by ANTLR 4.6
// jshint ignore: start
var antlr4 = require('antlr4/index');


var serializedATN = ["\u0003\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd",
    "\u0002\u0018\u008b\b\u0001\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004",
    "\u0004\t\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t",
    "\u0007\u0004\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004",
    "\f\t\f\u0004\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010",
    "\t\u0010\u0004\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013",
    "\u0004\u0014\t\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017",
    "\t\u0017\u0003\u0002\u0003\u0002\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003\u0003",
    "\u0003\u0004\u0003\u0004\u0003\u0005\u0003\u0005\u0003\u0006\u0003\u0006",
    "\u0003\u0007\u0003\u0007\u0003\b\u0003\b\u0003\t\u0003\t\u0003\n\u0003",
    "\n\u0003\u000b\u0003\u000b\u0003\f\u0003\f\u0003\r\u0003\r\u0003\u000e",
    "\u0003\u000e\u0003\u000f\u0003\u000f\u0003\u0010\u0003\u0010\u0003\u0011",
    "\u0003\u0011\u0003\u0012\u0006\u0012X\n\u0012\r\u0012\u000e\u0012Y\u0003",
    "\u0012\u0003\u0012\u0007\u0012^\n\u0012\f\u0012\u000e\u0012a\u000b\u0012",
    "\u0003\u0013\u0003\u0013\u0007\u0013e\n\u0013\f\u0013\u000e\u0013h\u000b",
    "\u0013\u0003\u0014\u0006\u0014k\n\u0014\r\u0014\u000e\u0014l\u0003\u0015",
    "\u0006\u0015p\n\u0015\r\u0015\u000e\u0015q\u0003\u0015\u0003\u0015\u0006",
    "\u0015v\n\u0015\r\u0015\u000e\u0015w\u0003\u0016\u0003\u0016\u0003\u0016",
    "\u0003\u0016\u0007\u0016~\n\u0016\f\u0016\u000e\u0016\u0081\u000b\u0016",
    "\u0003\u0016\u0003\u0016\u0003\u0017\u0006\u0017\u0086\n\u0017\r\u0017",
    "\u000e\u0017\u0087\u0003\u0017\u0003\u0017\u0003\u007f\u0002\u0018\u0003",
    "\u0003\u0005\u0004\u0007\u0005\t\u0006\u000b\u0007\r\b\u000f\t\u0011",
    "\n\u0013\u000b\u0015\f\u0017\r\u0019\u000e\u001b\u000f\u001d\u0010\u001f",
    "\u0011!\u0012#\u0013%\u0014\'\u0015)\u0016+\u0017-\u0018\u0003\u0002",
    "\b\u0003\u0002C\\\u0003\u00023;\u0003\u00022;\u0005\u0002B\\aac|\u0006",
    "\u00022;B\\aac|\u0005\u0002\u000b\f\u000f\u000f\"\"\u0093\u0002\u0003",
    "\u0003\u0002\u0002\u0002\u0002\u0005\u0003\u0002\u0002\u0002\u0002\u0007",
    "\u0003\u0002\u0002\u0002\u0002\t\u0003\u0002\u0002\u0002\u0002\u000b",
    "\u0003\u0002\u0002\u0002\u0002\r\u0003\u0002\u0002\u0002\u0002\u000f",
    "\u0003\u0002\u0002\u0002\u0002\u0011\u0003\u0002\u0002\u0002\u0002\u0013",
    "\u0003\u0002\u0002\u0002\u0002\u0015\u0003\u0002\u0002\u0002\u0002\u0017",
    "\u0003\u0002\u0002\u0002\u0002\u0019\u0003\u0002\u0002\u0002\u0002\u001b",
    "\u0003\u0002\u0002\u0002\u0002\u001d\u0003\u0002\u0002\u0002\u0002\u001f",
    "\u0003\u0002\u0002\u0002\u0002!\u0003\u0002\u0002\u0002\u0002#\u0003",
    "\u0002\u0002\u0002\u0002%\u0003\u0002\u0002\u0002\u0002\'\u0003\u0002",
    "\u0002\u0002\u0002)\u0003\u0002\u0002\u0002\u0002+\u0003\u0002\u0002",
    "\u0002\u0002-\u0003\u0002\u0002\u0002\u0003/\u0003\u0002\u0002\u0002",
    "\u00051\u0003\u0002\u0002\u0002\u0007:\u0003\u0002\u0002\u0002\t<\u0003",
    "\u0002\u0002\u0002\u000b>\u0003\u0002\u0002\u0002\r@\u0003\u0002\u0002",
    "\u0002\u000fB\u0003\u0002\u0002\u0002\u0011D\u0003\u0002\u0002\u0002",
    "\u0013F\u0003\u0002\u0002\u0002\u0015H\u0003\u0002\u0002\u0002\u0017",
    "J\u0003\u0002\u0002\u0002\u0019L\u0003\u0002\u0002\u0002\u001bN\u0003",
    "\u0002\u0002\u0002\u001dP\u0003\u0002\u0002\u0002\u001fR\u0003\u0002",
    "\u0002\u0002!T\u0003\u0002\u0002\u0002#W\u0003\u0002\u0002\u0002%b\u0003",
    "\u0002\u0002\u0002\'j\u0003\u0002\u0002\u0002)o\u0003\u0002\u0002\u0002",
    "+y\u0003\u0002\u0002\u0002-\u0085\u0003\u0002\u0002\u0002/0\u0007?\u0002",
    "\u00020\u0004\u0003\u0002\u0002\u000212\u0007h\u0002\u000223\u0007w",
    "\u0002\u000234\u0007p\u0002\u000245\u0007e\u0002\u000256\u0007v\u0002",
    "\u000267\u0007k\u0002\u000278\u0007q\u0002\u000289\u0007p\u0002\u0002",
    "9\u0006\u0003\u0002\u0002\u0002:;\u0007*\u0002\u0002;\b\u0003\u0002",
    "\u0002\u0002<=\u0007+\u0002\u0002=\n\u0003\u0002\u0002\u0002>?\u0007",
    "`\u0002\u0002?\f\u0003\u0002\u0002\u0002@A\u0007,\u0002\u0002A\u000e",
    "\u0003\u0002\u0002\u0002BC\u00071\u0002\u0002C\u0010\u0003\u0002\u0002",
    "\u0002DE\u0007-\u0002\u0002E\u0012\u0003\u0002\u0002\u0002FG\u0007/",
    "\u0002\u0002G\u0014\u0003\u0002\u0002\u0002HI\u0007<\u0002\u0002I\u0016",
    "\u0003\u0002\u0002\u0002JK\u0007#\u0002\u0002K\u0018\u0003\u0002\u0002",
    "\u0002LM\u0007.\u0002\u0002M\u001a\u0003\u0002\u0002\u0002NO\u0007]",
    "\u0002\u0002O\u001c\u0003\u0002\u0002\u0002PQ\u0007_\u0002\u0002Q\u001e",
    "\u0003\u0002\u0002\u0002RS\u0007}\u0002\u0002S \u0003\u0002\u0002\u0002",
    "TU\u0007\u007f\u0002\u0002U\"\u0003\u0002\u0002\u0002VX\t\u0002\u0002",
    "\u0002WV\u0003\u0002\u0002\u0002XY\u0003\u0002\u0002\u0002YW\u0003\u0002",
    "\u0002\u0002YZ\u0003\u0002\u0002\u0002Z[\u0003\u0002\u0002\u0002[_\t",
    "\u0003\u0002\u0002\\^\t\u0004\u0002\u0002]\\\u0003\u0002\u0002\u0002",
    "^a\u0003\u0002\u0002\u0002_]\u0003\u0002\u0002\u0002_`\u0003\u0002\u0002",
    "\u0002`$\u0003\u0002\u0002\u0002a_\u0003\u0002\u0002\u0002bf\t\u0005",
    "\u0002\u0002ce\t\u0006\u0002\u0002dc\u0003\u0002\u0002\u0002eh\u0003",
    "\u0002\u0002\u0002fd\u0003\u0002\u0002\u0002fg\u0003\u0002\u0002\u0002",
    "g&\u0003\u0002\u0002\u0002hf\u0003\u0002\u0002\u0002ik\t\u0004\u0002",
    "\u0002ji\u0003\u0002\u0002\u0002kl\u0003\u0002\u0002\u0002lj\u0003\u0002",
    "\u0002\u0002lm\u0003\u0002\u0002\u0002m(\u0003\u0002\u0002\u0002np\t",
    "\u0004\u0002\u0002on\u0003\u0002\u0002\u0002pq\u0003\u0002\u0002\u0002",
    "qo\u0003\u0002\u0002\u0002qr\u0003\u0002\u0002\u0002rs\u0003\u0002\u0002",
    "\u0002su\u00070\u0002\u0002tv\t\u0004\u0002\u0002ut\u0003\u0002\u0002",
    "\u0002vw\u0003\u0002\u0002\u0002wu\u0003\u0002\u0002\u0002wx\u0003\u0002",
    "\u0002\u0002x*\u0003\u0002\u0002\u0002y\u007f\u0007$\u0002\u0002z{\u0007",
    "^\u0002\u0002{~\u0007$\u0002\u0002|~\u000b\u0002\u0002\u0002}z\u0003",
    "\u0002\u0002\u0002}|\u0003\u0002\u0002\u0002~\u0081\u0003\u0002\u0002",
    "\u0002\u007f\u0080\u0003\u0002\u0002\u0002\u007f}\u0003\u0002\u0002",
    "\u0002\u0080\u0082\u0003\u0002\u0002\u0002\u0081\u007f\u0003\u0002\u0002",
    "\u0002\u0082\u0083\u0007$\u0002\u0002\u0083,\u0003\u0002\u0002\u0002",
    "\u0084\u0086\t\u0007\u0002\u0002\u0085\u0084\u0003\u0002\u0002\u0002",
    "\u0086\u0087\u0003\u0002\u0002\u0002\u0087\u0085\u0003\u0002\u0002\u0002",
    "\u0087\u0088\u0003\u0002\u0002\u0002\u0088\u0089\u0003\u0002\u0002\u0002",
    "\u0089\u008a\b\u0017\u0002\u0002\u008a.\u0003\u0002\u0002\u0002\f\u0002",
    "Y_flqw}\u007f\u0087\u0003\b\u0002\u0002"].join("");


var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map( function(ds, index) { return new antlr4.dfa.DFA(ds, index); });

function ExprLexer(input) {
	antlr4.Lexer.call(this, input);
    this._interp = new antlr4.atn.LexerATNSimulator(this, atn, decisionsToDFA, new antlr4.PredictionContextCache());
    return this;
}

ExprLexer.prototype = Object.create(antlr4.Lexer.prototype);
ExprLexer.prototype.constructor = ExprLexer;

ExprLexer.EOF = antlr4.Token.EOF;
ExprLexer.T__0 = 1;
ExprLexer.T__1 = 2;
ExprLexer.T__2 = 3;
ExprLexer.T__3 = 4;
ExprLexer.T__4 = 5;
ExprLexer.T__5 = 6;
ExprLexer.T__6 = 7;
ExprLexer.T__7 = 8;
ExprLexer.T__8 = 9;
ExprLexer.T__9 = 10;
ExprLexer.T__10 = 11;
ExprLexer.T__11 = 12;
ExprLexer.T__12 = 13;
ExprLexer.T__13 = 14;
ExprLexer.T__14 = 15;
ExprLexer.T__15 = 16;
ExprLexer.CELL = 17;
ExprLexer.ID = 18;
ExprLexer.INT = 19;
ExprLexer.FLOAT = 20;
ExprLexer.STRING = 21;
ExprLexer.WS = 22;


ExprLexer.prototype.modeNames = [ "DEFAULT_MODE" ];

ExprLexer.prototype.literalNames = [ null, "'='", "'function'", "'('", "')'", 
                                     "'^'", "'*'", "'/'", "'+'", "'-'", 
                                     "':'", "'!'", "','", "'['", "']'", 
                                     "'{'", "'}'" ];

ExprLexer.prototype.symbolicNames = [ null, null, null, null, null, null, 
                                      null, null, null, null, null, null, 
                                      null, null, null, null, null, "CELL", 
                                      "ID", "INT", "FLOAT", "STRING", "WS" ];

ExprLexer.prototype.ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", 
                                  "T__5", "T__6", "T__7", "T__8", "T__9", 
                                  "T__10", "T__11", "T__12", "T__13", "T__14", 
                                  "T__15", "CELL", "ID", "INT", "FLOAT", 
                                  "STRING", "WS" ];

ExprLexer.prototype.grammarFileName = "Expr.g4";



exports.ExprLexer = ExprLexer;

